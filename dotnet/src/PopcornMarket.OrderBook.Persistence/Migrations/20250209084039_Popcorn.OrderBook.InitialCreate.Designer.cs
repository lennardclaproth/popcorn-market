// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PopcornMarket.OrderBook.Persistence.Context;

#nullable disable

namespace PopcornMarket.OrderBook.Persistence.Migrations
{
    [DbContext(typeof(OrderBookDbContext))]
    [Migration("20250209084039_Popcorn.OrderBook.InitialCreate")]
    partial class PopcornOrderBookInitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Popcorn.OrderBook.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UUID");

                    b.Property<Guid>("OrderBookId")
                        .HasColumnType("UUID");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("NUMERIC(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMPTZ");

                    b.Property<string>("TraderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("Order", "OrderBook");

                    b.HasDiscriminator<string>("OrderType").HasValue("Order");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Popcorn.OrderBook.Domain.Entities.OrderBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UUID");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StockSymbol");

                    b.ToTable("OrderBook", "OrderBook");
                });

            modelBuilder.Entity("Popcorn.OrderBook.Domain.Entities.BuyOrder", b =>
                {
                    b.HasBaseType("Popcorn.OrderBook.Domain.Entities.Order");

                    b.HasIndex("OrderBookId");

                    b.HasDiscriminator().HasValue("BuyOrder");
                });

            modelBuilder.Entity("Popcorn.OrderBook.Domain.Entities.SellOrder", b =>
                {
                    b.HasBaseType("Popcorn.OrderBook.Domain.Entities.Order");

                    b.HasIndex("OrderBookId");

                    b.HasDiscriminator().HasValue("SellOrder");
                });

            modelBuilder.Entity("Popcorn.OrderBook.Domain.Entities.BuyOrder", b =>
                {
                    b.HasOne("Popcorn.OrderBook.Domain.Entities.OrderBook", "OrderBook")
                        .WithMany("BuyOrders")
                        .HasForeignKey("OrderBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderBook");
                });

            modelBuilder.Entity("Popcorn.OrderBook.Domain.Entities.SellOrder", b =>
                {
                    b.HasOne("Popcorn.OrderBook.Domain.Entities.OrderBook", "OrderBook")
                        .WithMany("SellOrders")
                        .HasForeignKey("OrderBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderBook");
                });

            modelBuilder.Entity("Popcorn.OrderBook.Domain.Entities.OrderBook", b =>
                {
                    b.Navigation("BuyOrders");

                    b.Navigation("SellOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
